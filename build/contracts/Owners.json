{
  "contractName": "Owners",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "stopContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_salaryRatio",
          "type": "uint256"
        }
      ],
      "name": "setSalaryRatio",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAvailableJobs",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEconomicVariables",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setBeerPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wineStock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendRatio",
          "type": "uint256"
        }
      ],
      "name": "setDividendRatio",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "beerStock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEmployeesListNumbers",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTreasuryBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwnerListNumbers",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "resumeContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getRevenueDistribution",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setWinePrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getGovBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBarVariables",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getGovAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBarFixData",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getUserAccount",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_govAddress",
          "type": "address"
        }
      ],
      "name": "GovEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_ownerAddress",
          "type": "address"
        }
      ],
      "name": "OwnerEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_govAddress",
          "type": "address"
        }
      ],
      "name": "TaxRatioEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "BeerPriceEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WinePriceEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SalaryRatioEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DividendRatioEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WithdrawEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "beOwner",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "beGovernment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_taxRatio",
          "type": "uint256"
        }
      ],
      "name": "setTaxRatio",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTaxRatio",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSharePrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312253a6c146101715780631a478b94146101885780631aa15bbe146101b55780631f731c5d146101e05780633ccfd60b146102275780634c2e589d1461023e5780634e3323171461026b5780635b1dac60146102965780635ef32e2c146102c157806360f46935146102ec5780636f9fb98a146103195780638e29e0271461034457806399866b6d1461036f5780639b5655dc146103a15780639cabe06e146103cc578063b55c56c1146103fa578063c4bc5da51461042c578063c655af3c14610443578063d0057fd9146104a0578063d3cd0dc9146104cd578063db41002b146104f8578063e16e7d0b1461050f578063ef4a63b81461055d578063fa33545c146105b4578063fb47e016146106bf578063fe303ebf14610789575b6000809054906101000a900460ff1615151561016f57600080fd5b005b34801561017d57600080fd5b506101866107b6565b005b34801561019457600080fd5b506101b36004803603810190808035906020019092919050505061082e565b005b3480156101c157600080fd5b506101ca6108eb565b6040518082815260200191505060405180910390f35b3480156101ec57600080fd5b506101f56108fc565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b34801561023357600080fd5b5061023c610959565b005b34801561024a57600080fd5b5061026960048036038101908080359060200190929190505050610f0e565b005b34801561027757600080fd5b50610280610fc4565b6040518082815260200191505060405180910390f35b3480156102a257600080fd5b506102ab610fca565b6040518082815260200191505060405180910390f35b3480156102cd57600080fd5b506102d6610fd9565b6040518082815260200191505060405180910390f35b3480156102f857600080fd5b5061031760048036038101908080359060200190929190505050610fe3565b005b34801561032557600080fd5b5061032e6110a0565b6040518082815260200191505060405180910390f35b34801561035057600080fd5b506103596110bf565b6040518082815260200191505060405180910390f35b34801561037b57600080fd5b506103846110c5565b604051808381526020018281526020019250505060405180910390f35b3480156103ad57600080fd5b506103b66110d9565b6040518082815260200191505060405180910390f35b6103f86004803603810190808035906020019082018035906020019190919293919293905050506110e3565b005b34801561040657600080fd5b5061040f611448565b604051808381526020018281526020019250505060405180910390f35b34801561043857600080fd5b5061044161145c565b005b34801561044f57600080fd5b5061046e600480360381019080803590602001909291905050506114d4565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b3480156104ac57600080fd5b506104cb600480360381019080803590602001909291905050506115e7565b005b3480156104d957600080fd5b506104e261169d565b6040518082815260200191505060405180910390f35b34801561050457600080fd5b5061050d6116a7565b005b34801561051b57600080fd5b506105246117ef565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b34801561056957600080fd5b50610572611872565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105c057600080fd5b506105c961189c565b60405180806020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828103825288818151815260200191508051906020019080838360005b8381101561067f578082015181840152602081019050610664565b50505050905090810190601f1680156106ac5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b3480156106cb57600080fd5b50610700600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119a7565b6040518080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b8381101561074c578082015181840152602081019050610731565b50505050905090810190601f1680156107795780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561079557600080fd5b506107b460048036038101908080359060200190929190505050611ec7565b005b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561081257600080fd5b60016000806101000a81548160ff021916908315150217905550565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561088a57600080fd5b6000811015801561089b5750606481105b156108e857806009819055506108b16000611f9b565b6108bb6001611f9b565b7f45f3a23c7e881769d4c9588f5bc54d911aaa242e98f6998be38c3703842c863560405160405180910390a15b50565b600060168054905060055403905090565b60008060008060008060006017600060028110151561091757fe5b600702016001015491506017600160028110151561093157fe5b600702016001015490508181600954600a546008549650965096509650965050509091929394565b600080600080600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610a085750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610a5c5750600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80610ab05750601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610abb57600080fd5b6000809054906101000a900460ff16151515610ad657600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16319250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610bbc57600c5493506000600c819055503373ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f193505050501515610b9357600080fd5b8383033073ffffffffffffffffffffffffffffffffffffffff1631141515610bb757fe5b610edc565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c615750600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b15610d2157600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020915081600101549350600082600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f193505050501515610cf857600080fd5b8383033073ffffffffffffffffffffffffffffffffffffffff1631141515610d1c57fe5b610edb565b601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680610dc25750601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b15610eda57601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600101549350600081600101819055506000601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff166108fc82600101549081150290604051600060405180830381858888f193505050501515610eb557600080fd5b8383033073ffffffffffffffffffffffffffffffffffffffff1631141515610ed957fe5b5b5b5b7fedf4c498a33515202a60039146725349bac735e8e1de60466b9ac800302cbae160405160405180910390a150505050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f6b57600080fd5b60176000600281101515610f7b57fe5b600702019050818160010181905550610f946000611f9b565b7facc7b9eaf1ff3bee21db509289180435b1fdd8f49212c96e318c1f87fa9420ba60405160405180910390a15050565b60075481565b6000610fd46120e3565b905090565b6000600854905090565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561103f57600080fd5b600081101580156110505750606481105b1561109d5780600a819055506110666000611f9b565b6110706001611f9b565b7f31c61375bcb60f9eb97e6962303171d2eb0529486a0dbd519ecbbab89c21270460405160405180910390a15b50565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60065481565b600080601680549050600554915091509091565b6000600b54905090565b6110eb612186565b60008060009054906101000a900460ff1615151561110857600080fd5b60045460158054905010151561111d57600080fd5b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561117657600080fd5b61117e6120e3565b3414151561118b57600080fd5b6014848490501115151561119e57600080fd5b604080519081016040528085858080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505081526020016000815250915081600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906112449291906121a0565b5060208201518160010155905050600160153390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555003600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600d60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506113d56113c26120e3565b826001015461210190919063ffffffff16565b8160010181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fd30bb139b3decb2474a8d5025c92d2845a89e67e468c2cf3da2a9bb70c5e7ac460405160405180910390a250505050565b600080601580549050600454915091509091565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114b857600080fd5b60008060006101000a81548160ff021916908315150217905550565b60008060008060006114e4612220565b6017876002811015156114f357fe5b6007020160e060405190810160405290816000820160009054906101000a900460ff16600181111561152157fe5b600181111561152c57fe5b8152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820154815260200160068201548152505090508060200151816060015182608001518360a001518460c00151955095509550955095505091939590929450565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561164457600080fd5b6017600160028110151561165457fe5b60070201905081816001018190555061166d6001611f9b565b7fb61c7a90005ce2d07af7a8f94e006cca4ca972cc628406f4c86f9205e3ab303860405160405180910390a15050565b6000600c54905090565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561170057600080fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561174757600080fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fe2ea68412b1c74abf741ffc807e10ee138cf8184ec4bbc5cfa2ece494df9f73d60405160405180910390a2565b600080600080600080600080600061181760158054905060045461211f90919063ffffffff16565b925061183360168054905060055461211f90919063ffffffff16565b91503073ffffffffffffffffffffffffffffffffffffffff163190508281600b5484600654600754985098509850985098509850505050909192939495565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060008060008060006002600354600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600454600554858054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561198c5780601f106119615761010080835404028352916020019161198c565b820191906000526020600020905b81548152906001019060200180831161196f57829003601f168201915b50505050509550955095509550955095509550909192939495565b60606000806119b4612186565b6119bc61227f565b6119c461227f565b600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611b2b57600d60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604080519081016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611af95780601f10611ace57610100808354040283529160200191611af9565b820191906000526020600020905b815481529060010190602001808311611adc57829003601f168201915b505050505081526020016001820154815250509250826000015183602001516001829250809050955095509550611ebd565b601260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611c9257601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604080519081016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c605780601f10611c3557610100808354040283529160200191611c60565b820191906000526020600020905b815481529060010190602001808311611c4357829003601f168201915b505050505081526020016001820154815250509150816000015182602001516002829250809050955095509550611ebd565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415611d3357600c5460036040805190810160405280600a81526020017f676f7665726e6d656e74000000000000000000000000000000000000000000008152509190809050955095509550611ebd565b601360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611e9a57601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604080519081016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e685780601f10611e3d57610100808354040283529160200191611e68565b820191906000526020600020905b815481529060010190602001808311611e4b57829003601f168201915b505050505081526020016001820154815250509050806000015181602001516004829250809050955095509550611ebd565b600080602060405190810160405280600081525091908191508090509550955095505b5050509193909250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f2357600080fd5b60008110158015611f345750606481105b15611f985780600881905550611f4a6000611f9b565b611f546001611f9b565b3373ffffffffffffffffffffffffffffffffffffffff167ff5c78b4fba5c9dd9f3766d019ec37498d112c1bb4add75440e1a217dbcecc8d060405160405180910390a25b50565b6000601782600281101515611fac57fe5b600702019050611fde6064611fd0600854846001015461213890919063ffffffff16565b61216b90919063ffffffff16565b8160030181905550612028606461201a60095461200c8560030154866001015461211f90919063ffffffff16565b61213890919063ffffffff16565b61216b90919063ffffffff16565b8160040181905550612088606461207a600a5461206c856004015461205e8760030154886001015461211f90919063ffffffff16565b61211f90919063ffffffff16565b61213890919063ffffffff16565b61216b90919063ffffffff16565b81600501819055506120d781600501546120c983600401546120bb8560030154866001015461211f90919063ffffffff16565b61211f90919063ffffffff16565b61211f90919063ffffffff16565b81600601819055505050565b60006120fc60045460035461216b90919063ffffffff16565b905090565b600080828401905083811015151561211557fe5b8091505092915050565b600082821115151561212d57fe5b818303905092915050565b60008082840290506000841480612159575082848281151561215657fe5b04145b151561216157fe5b8091505092915050565b600080828481151561217957fe5b0490508091505092915050565b604080519081016040528060608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106121e157805160ff191683800117855561220f565b8280016001018555821561220f579182015b8281111561220e5782518255916020019190600101906121f3565b5b50905061221c9190612299565b5090565b60e0604051908101604052806000600181111561223957fe5b815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081525090565b604080519081016040528060608152602001600081525090565b6122bb91905b808211156122b757600081600090555060010161229f565b5090565b905600a165627a7a7230582055f7a79919ceff53f98a9ce3c54c358cc5ef538b8b97ce8ac8ebac6ded6121c20029",
  "sourceMap": "175:2398:4:-;;;699:5:2;682:22;;;;;;;;;;;;;;;;;;;;799:3;769:33;;;;;;;;;;;;;;;;;;;;5664:22;;:::i;:::-;5234:10;5217:14;;:27;;;;;;;;;;;;;;;;;;5255:26;;;;;;;;;;;;;;;;;;:7;:26;;;;;;;;;;;;:::i;:::-;;5334:21;5321:10;:34;;;;5392:3;5380:9;:15;;;;5473:2;5458:12;:17;;;;5540:3;5528:9;:15;;;;5566:3;5554:9;:15;;;;5593:2;5582:8;:13;;;;5620:2;5606:11;:16;;;;5649:2;5633:13;:18;;;;5689:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5714:1;5689:27;;;5664:52;;5751:9;5727;:21;5737:10;5727:21;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5827:1;5797:10;5813;5797:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5797:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:31;5771:11;:23;5783:10;5771:23;;;;;;;;;;;;;;;:57;;;;5864:4;5839:10;:22;5850:10;5839:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5896:64;;;;;;;;;5905:18;5896:64;;;;;;;;;;;;5925:17;5896:64;;;;5944:3;5896:64;;;;;;5949:1;5896:64;;;;5952:1;5896:64;;;;5955:1;5896:64;;;;5958:1;5896:64;;;5881:9;5891:1;5881:12;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5986:64;;;;;;;;;5995:18;5986:64;;;;;;;;;;;;6015:17;5986:64;;;;6034:3;5986:64;;;;;;6039:1;5986:64;;;;6042:1;5986:64;;;;6045:1;5986:64;;;;6048:1;5986:64;;;5971:9;5981:1;5971:12;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6063:27;6088:1;6063:24;;;:27;;;:::i;:::-;6101;6126:1;6101:24;;;:27;;;:::i;:::-;5185:951;175:2398:4;;14798:510:2;14862:24;14889:9;14899:3;14889:14;;;;;;;;;;;;14862:41;;14930:36;14962:3;14930:27;14948:8;;14930:7;:13;;;:17;;;;;;:27;;;;;:::i;:::-;:31;;;;;;:36;;;;;:::i;:::-;14914:7;:13;;:52;;;;14998:62;15056:3;14998:53;15039:11;;15000:32;15018:7;:13;;;15000:7;:13;;;:17;;;;;;:32;;;;;:::i;:::-;14998:40;;;;;;:53;;;;;:::i;:::-;:57;;;;;;:62;;;;;:::i;:::-;14977:7;:18;;:83;;;;15096:88;15180:3;15096:79;15161:13;;15098:56;15135:7;:18;;;15098:32;15116:7;:13;;;15098:7;:13;;;:17;;;;;;:32;;;;;:::i;:::-;:36;;;;;;:56;;;;;:::i;:::-;15096:64;;;;;;:79;;;;;:::i;:::-;:83;;;;;;:88;;;;;:::i;:::-;15071:7;:22;;:113;;;;15216:84;15277:7;:22;;;15216:56;15253:7;:18;;;15216:32;15234:7;:13;;;15216:7;:13;;;:17;;;;;;:32;;;;;:::i;:::-;:36;;;;;;:56;;;;;:::i;:::-;:60;;;;;;:84;;;;;:::i;:::-;15195:7;:18;;:105;;;;14798:510;;:::o;144:147:5:-;202:7;218:9;234:1;230;:5;218:17;;254:1;249;:6;:20;;;;268:1;263;259;:5;;;;;;;;:10;249:20;242:28;;;;;;284:1;277:8;;144:147;;;;;:::o;297:270::-;355:7;446:9;462:1;458;:5;;;;;;;;446:17;;560:1;553:8;;297:270;;;;;:::o;573:113::-;631:7;659:1;654;:6;;647:14;;;;;;679:1;675;:5;668:12;;573:113;;;;:::o;175:2398:4:-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "175:2398:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3497:9:2;;;;;;;;;;;3496:10;3488:19;;;;;;;;175:2398:4;6228:76:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6228:76:2;;;;;;7230:299;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7230:299:2;;;;;;;;;;;;;;;;;;;;;;;;;;13921:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13921:115:2;;;;;;;;;;;;;;;;;;;;;;;11788:266;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11788:266:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8105:1366;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8105:1366:2;;;;;;6546:221;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6546:221:2;;;;;;;;;;;;;;;;;;;;;;;;;;1109:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1109:21:2;;;;;;;;;;;;;;;;;;;;;;;2477:93:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2477:93:4;;;;;;;;;;;;;;;;;;;;;;;2330:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2330:83:4;;;;;;;;;;;;;;;;;;;;;;;7664:313:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7664:313:2;;;;;;;;;;;;;;;;;;;;;;;;;;13810:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13810:103:2;;;;;;;;;;;;;;;;;;;;;;;1081:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1081:21:2;;;;;;;;;;;;;;;;;;;;;;;13524:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13524:140:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13419:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13419:97:2;;;;;;;;;;;;;;;;;;;;;;;896:600:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13672:130:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13672:130:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6312:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6312:79:2;;;;;;9994:349;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9994:349:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6847:221;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6847:221:2;;;;;;;;;;;;;;;;;;;;;;;;;;13324:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13324:87:2;;;;;;;;;;;;;;;;;;;;;;;1773:131:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1773:131:4;;;;;;11149:477:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11149:477:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13226:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13226:90:2;;;;;;;;;;;;;;;;;;;;;;;;;;;10597:274;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10597:274:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10597:274:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12397:735;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12397:735:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12397:735:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:284:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1999:284:4;;;;;;;;;;;;;;;;;;;;;;;;;;6228:76:2;3763:14;;;;;;;;;;;3749:28;;:10;:28;;;3741:37;;;;;;;;6292:4;6280:9;;:16;;;;;;;;;;;;;;;;;;6228:76::o;7230:299::-;3763:14;;;;;;;;;;;3749:28;;:10;:28;;;3741:37;;;;;;;;7322:1;7306:12;:17;;:39;;;;;7342:3;7327:12;:18;7306:39;7303:219;;;7376:12;7362:11;:26;;;;7403:27;7428:1;7403:24;:27::i;:::-;7445;7470:1;7445:24;:27::i;:::-;7492:18;;;;;;;;;;7303:219;7230:299;:::o;13921:115::-;13969:4;14008:13;:20;;;;13993:12;;:35;13986:42;;13921:115;:::o;11788:266::-;11847:4;11853;11859;11865;11871;11888:14;11934;11905:9;11915:1;11905:12;;;;;;;;;;;;:18;;;11888:35;;11951:9;11961:1;11951:12;;;;;;;;;;;;:18;;;11934:35;;11987:9;11998;12009:11;;12022:13;;12037:8;;11980:66;;;;;;;;;;11788:266;;;;;;;:::o;8105:1366::-;8170:22;8203:26;8671:20;9080:26;4860:14;;;;;;;;;;;4846:28;;:10;:28;;;:69;;;;4905:10;;;;;;;;;;;4891:24;;:10;:24;;;4846:69;:108;;;;4932:10;:22;4943:10;4932:22;;;;;;;;;;;;;;;;;;;;;;;;;4846:108;:150;;;;4971:13;:25;4985:10;4971:25;;;;;;;;;;;;;;;;;;;;;;;;;4846:150;4824:173;;;;;;;;3497:9;;;;;;;;;;;3496:10;3488:19;;;;;;;;8240:4;8232:21;;;8203:50;;8281:10;;;;;;;;;;;8267:24;;:10;:24;;;8264:1167;;;8355:10;;8335:30;;8393:1;8380:10;:14;;;;8417:10;:15;;:34;8433:17;8417:34;;;;;;;;;;;;;;;;;;;;;;;8409:43;;;;;;;;8523:17;8499:21;:41;8482:4;8474:21;;;:66;8467:74;;;;;;8264:1167;;;8578:14;;;;;;;;;;;8564:28;;:10;:28;;;:54;;;;8596:10;:22;8607:10;8596:22;;;;;;;;;;;;;;;;;;;;;;;;;8564:54;8561:870;;;8694:9;:21;8704:10;8694:21;;;;;;;;;;;;;;;8671:44;;8750:6;:14;;;8730:34;;8796:1;8779:6;:14;;:18;;;;8820:10;:15;;:34;8836:17;8820:34;;;;;;;;;;;;;;;;;;;;;;;8812:43;;;;;;;;8926:17;8902:21;:41;8885:4;8877:21;;;:66;8870:74;;;;;;8561:870;;;8967:13;:25;8981:10;8967:25;;;;;;;;;;;;;;;;;;;;;;;;;:56;;;;8996:15;:27;9012:10;8996:27;;;;;;;;;;;;;;;;;;;;;;;;;8967:56;8964:467;;;9109:12;:24;9122:10;9109:24;;;;;;;;;;;;;;;9080:53;;9168:9;:17;;;9148:37;;9220:1;9200:9;:17;;:21;;;;9266:5;9236:15;:27;9252:10;9236:27;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;9294:10;:15;;:34;9310:9;:17;;;9294:34;;;;;;;;;;;;;;;;;;;;;;;9286:43;;;;;;;;9400:17;9376:21;:41;9359:4;9351:21;;;:66;9344:74;;;;;;8964:467;8561:870;8264:1167;9448:15;;;;;;;;;;8105:1366;;;;:::o;6546:221::-;6616:22;3763:14;;;;;;;;;;;3749:28;;:10;:28;;;3741:37;;;;;;;;6641:9;6651:1;6641:12;;;;;;;;;;;;6616:37;;6678:11;6664:5;:11;;:25;;;;6700:27;6725:1;6700:24;:27::i;:::-;6743:16;;;;;;;;;;6546:221;;:::o;1109:21::-;;;;:::o;2477:93:4:-;2522:4;2546:16;:14;:16::i;:::-;2539:23;;2477:93;:::o;2330:83::-;2373:4;2397:8;;2390:15;;2330:83;:::o;7664:313:2:-;3763:14;;;;;;;;;;;3749:28;;:10;:28;;;3741:37;;;;;;;;7762:1;7744:14;:19;;:43;;;;;7784:3;7767:14;:20;7744:43;7741:229;;;7820:14;7804:13;:30;;;;7849:27;7874:1;7849:24;:27::i;:::-;7891;7916:1;7891:24;:27::i;:::-;7938:20;;;;;;;;;;7741:229;7664:313;:::o;13810:103::-;13860:4;13892;13884:21;;;13877:28;;13810:103;:::o;1081:21::-;;;;:::o;13524:140::-;13579:4;13585;13608:13;:20;;;;13630:12;;13601:42;;;;13524:140;;:::o;13419:97::-;13469:4;13493:15;;13486:22;;13419:97;:::o;896:600:4:-;1088:22;;:::i;:::-;1332;3497:9:2;;;;;;;;;;;3496:10;3488:19;;;;;;;;4641:9;;4621:10;:17;;;;:29;4613:38;;;;;;;;4211:10;:22;4222:10;4211:22;;;;;;;;;;;;;;;;;;;;;;;;;4210:23;4202:32;;;;;;;;1015:16:4;:14;:16::i;:::-;1002:9;:29;994:38;;;;;;;;1074:2;1057:5;;1051:19;;:25;;1043:34;;;;;;;;1113:15;;;;;;;;;1119:5;;1113:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1126:1;1113:15;;;1088:40;;1163:9;1139;:21;1149:10;1139:21;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1278:1;1248:10;1264;1248:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1248:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:31;1222:11;:23;1234:10;1222:23;;;;;;;;;;;;;;;:57;;;;1315:4;1290:10;:22;1301:10;1290:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1357:9;:25;1367:14;;;;;;;;;;;1357:25;;;;;;;;;;;;;;;1332:50;;1412:38;1433:16;:14;:16::i;:::-;1412:8;:16;;;:20;;:38;;;;:::i;:::-;1393:8;:16;;:57;;;;1477:10;;;;;;;;;;;1466:22;;;;;;;;;;;;896:600;;;;:::o;13672:130:2:-;13723:4;13729;13752:10;:17;;;;13771:9;;13745:36;;;;13672:130;;:::o;6312:79::-;3763:14;;;;;;;;;;;3749:28;;:10;:28;;;3741:37;;;;;;;;6378:5;6366:9;;:17;;;;;;;;;;;;;;;;;;6312:79::o;9994:349::-;10063:4;10069;10075;10081;10087;10104:23;;:::i;:::-;10130:9;10140:3;10130:14;;;;;;;;;;;;10104:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10176:7;:13;;;10204:7;:13;;;10232:7;:18;;;10265:7;:22;;;10302:7;:18;;;10155:180;;;;;;;;;;9994:349;;;;;;;;:::o;6847:221::-;6917:22;3763:14;;;;;;;;;;;3749:28;;:10;:28;;;3741:37;;;;;;;;6942:9;6952:1;6942:12;;;;;;;;;;;;6917:37;;6979:11;6965:5;:11;;:25;;;;7001:27;7026:1;7001:24;:27::i;:::-;7044:16;;;;;;;;;;6847:221;;:::o;13324:87::-;13369:4;13393:10;;13386:17;;13324:87;:::o;1773:131:4:-;4211:10:2;:22;4222:10;4211:22;;;;;;;;;;;;;;;;;;;;;;;;;4210:23;4202:32;;;;;;;;4048:3;4034:10;;;;;;;;;;;:17;;;4026:26;;;;;;;;1850:10:4;1837;;:23;;;;;;;;;;;;;;;;;;1885:10;;;;;;;;;;;1876:20;;;;;;;;;;;;1773:131::o;11149:477:2:-;11203:4;11209;11215;11221;11227;11233;11250:21;11317:19;11388:20;11274:32;11288:10;:17;;;;11274:9;;:13;;:32;;;;:::i;:::-;11250:56;;11339:38;11356:13;:20;;;;11339:12;;:16;;:38;;;;:::i;:::-;11317:60;;11419:4;11411:21;;;11388:44;;11464:16;11495:15;11525;;11555:14;11584:9;;11608;;11443:175;;;;;;;;;;;;11149:477;;;;;;;;;:::o;13226:90::-;13271:7;13298:10;;;;;;;;;;;13291:17;;13226:90;:::o;10597:274::-;10649:6;10657:4;10663:7;10672;10681:4;10687;10725:7;10747:10;;10772:14;;;;;;;;;;;10801:10;;;;;;;;;;;10826:9;;10850:12;;10704:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10597:274;;;;;;:::o;12397:735::-;12466:6;12474:4;12480;12537:19;;:::i;:::-;12694:25;;:::i;:::-;12966:27;;:::i;:::-;12500:10;:20;12511:8;12500:20;;;;;;;;;;;;;;;;;;;;;;;;;12497:597;;;12559:9;:19;12569:8;12559:19;;;;;;;;;;;;;;;12537:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12600:6;:11;;;12613:6;:14;;;12629:1;12593:38;;;;;;;;;;;;;;12497:597;12654:13;:23;12668:8;12654:23;;;;;;;;;;;;;;;;;;;;;;;;;12651:443;;;12722:12;:22;12735:8;12722:22;;;;;;;;;;;;;;;12694:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12767:9;:14;;;12783:9;:17;;;12802:1;12759:45;;;;;;;;;;;;;;12651:443;12839:10;;;;;;;;;;;12827:22;;:8;:22;;;12824:270;;;12887:10;;12899:1;12866:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12824:270;12924:15;:25;12940:8;12924:25;;;;;;;;;;;;;;;;;;;;;;;;;12921:173;;;12996:12;:22;13009:8;12996:22;;;;;;;;;;;;;;;12966:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13041:11;:16;;;13059:11;:19;;;13080:1;13033:49;;;;;;;;;;;;;;12921:173;13118:1;13122;13106:18;;;;;;;;;;;;;;;;;;;;;;;;;;;12397:735;;;;;;;;;:::o;1999:284:4:-;3956:10:2;;;;;;;;;;;3942:24;;:10;:24;;;3934:33;;;;;;;;2078:1:4;2065:9;:14;;:33;;;;;2095:3;2083:9;:15;2065:33;2062:214;;;2126:9;2115:8;:20;;;;2150:27;2175:1;2150:24;:27::i;:::-;2192;2217:1;2192:24;:27::i;:::-;2253:10;2239:25;;;;;;;;;;;;2062:214;1999:284;:::o;14798:510:2:-;14862:24;14889:9;14899:3;14889:14;;;;;;;;;;;;14862:41;;14930:36;14962:3;14930:27;14948:8;;14930:7;:13;;;:17;;:27;;;;:::i;:::-;:31;;:36;;;;:::i;:::-;14914:7;:13;;:52;;;;14998:62;15056:3;14998:53;15039:11;;15000:32;15018:7;:13;;;15000:7;:13;;;:17;;:32;;;;:::i;:::-;14998:40;;:53;;;;:::i;:::-;:57;;:62;;;;:::i;:::-;14977:7;:18;;:83;;;;15096:88;15180:3;15096:79;15161:13;;15098:56;15135:7;:18;;;15098:32;15116:7;:13;;;15098:7;:13;;;:17;;:32;;;;:::i;:::-;:36;;:56;;;;:::i;:::-;15096:64;;:79;;;;:::i;:::-;:83;;:88;;;;:::i;:::-;15071:7;:22;;:113;;;;15216:84;15277:7;:22;;;15216:56;15253:7;:18;;;15216:32;15234:7;:13;;;15216:7;:13;;;:17;;:32;;;;:::i;:::-;:36;;:56;;;;:::i;:::-;:60;;:84;;;;:::i;:::-;15195:7;:18;;:105;;;;14798:510;;:::o;14176:114::-;14224:4;14247:25;14262:9;;14247:10;;:14;;:25;;;;:::i;:::-;14240:32;;14176:114;:::o;692:133:5:-;750:7;766:9;782:1;778;:5;766:17;;802:1;797;:6;;790:14;;;;;;818:1;811:8;;692:133;;;;;:::o;573:113::-;631:7;659:1;654;:6;;647:14;;;;;;679:1;675;:5;668:12;;573:113;;;;:::o;144:147::-;202:7;218:9;234:1;230;:5;218:17;;254:1;249;:6;:20;;;;268:1;263;259;:5;;;;;;;;:10;249:20;242:28;;;;;;284:1;277:8;;144:147;;;;;:::o;297:270::-;355:7;446:9;462:1;458;:5;;;;;;;;446:17;;560:1;553:8;;297:270;;;;;:::o;175:2398:4:-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport \"./Entity.sol\";\r\n\r\n/** @title Owners describes specific functions to endorse the role of the Government\r\nor to be a co-owner of the bar */\r\ncontract Owners is Entity {\r\n\r\n    event GovEvent (address indexed _govAddress);\r\n    event OwnerEvent (address indexed _ownerAddress);\r\n    event TaxRatioEvent (address indexed _govAddress);\r\n\r\n    /** @dev allows the current user to be an owner by buying 1 share (& 1 share\r\n    * only for the specify address) of the bar directly from the Manager.\r\n    * There is no sybil attack as this contract is supposed to be linked to\r\n    * official documents outside the blockchain. The Manager is supposed to acquire\r\n    * for non blockchain purposes documents of the co-owner.\r\n    * Everybody can be an owner as long as there are enough share available.\r\n    * All the remaining shares belong to the Manager.\r\n    */\r\n    function beOwner(string _name) external authorized isShareAvailable isNotOwner payable {\r\n        require(msg.value == _getSharePrice());\r\n        require(bytes(_name).length <= 20);\r\n        Owner memory _newOwner = Owner(_name, 0);\r\n        ownersMap[msg.sender] = _newOwner; // check memory storage state of a map\r\n        ownersIdMap[msg.sender] = ownersList.push(msg.sender) - 1;\r\n        isOwnerMap[msg.sender] = true;\r\n\r\n        Owner storage _manager = ownersMap[managerAddress];\r\n        _manager.balance = _manager.balance.add(_getSharePrice());\r\n        emit OwnerEvent(govAddress);\r\n    }\r\n\r\n    /** @dev allows the current user to claim the role of the government.\r\n    * in this prototype. Like a RPG, anyone can claim this role. IRL, this contract\r\n    * would be linked to real government document allowing only the goverment to\r\n    * claim this role. */\r\n    function beGovernment() external isNotOwner noGovYet {\r\n        govAddress = msg.sender;\r\n        emit GovEvent(govAddress);\r\n    }\r\n\r\n    /** @dev allows the government to define the tax ratio applicable on beverages */\r\n    function setTaxRatio(uint _taxRatio) external isGov {\r\n        if(_taxRatio >= 0 && _taxRatio < 100) {\r\n            taxRatio = _taxRatio;\r\n            _updateRevenuesOnProduct(0);\r\n            _updateRevenuesOnProduct(1);\r\n            emit TaxRatioEvent(msg.sender);\r\n        }\r\n    }\r\n\r\n    /** @return the ratio of taxes */\r\n    function getTaxRatio() public view returns(uint) {\r\n        return taxRatio;\r\n    }\r\n\r\n    /** for testing purpose of an internal function */\r\n    function getSharePrice() public view returns(uint) {\r\n        return _getSharePrice();\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Jacques\\SOLIDITY-PROJECTS\\finalproject2\\contracts\\Owners.sol",
  "ast": {
    "absolutePath": "/C/Users/Jacques/SOLIDITY-PROJECTS/finalproject2/contracts/Owners.sol",
    "exportedSymbols": {
      "Owners": [
        1810
      ]
    },
    "id": 1811,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1642,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/C/Users/Jacques/SOLIDITY-PROJECTS/finalproject2/contracts/Entity.sol",
        "file": "./Entity.sol",
        "id": 1643,
        "nodeType": "ImportDirective",
        "scope": 1811,
        "sourceUnit": 1584,
        "src": "28:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1644,
              "name": "Entity",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1583,
              "src": "194:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Entity_$1583",
                "typeString": "contract Entity"
              }
            },
            "id": 1645,
            "nodeType": "InheritanceSpecifier",
            "src": "194:6:4"
          }
        ],
        "contractDependencies": [
          1583
        ],
        "contractKind": "contract",
        "documentation": "@title Owners describes specific functions to endorse the role of the Government\r\nor to be a co-owner of the bar ",
        "fullyImplemented": true,
        "id": 1810,
        "linearizedBaseContracts": [
          1810,
          1583
        ],
        "name": "Owners",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 1649,
            "name": "GovEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1647,
                  "indexed": true,
                  "name": "_govAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "226:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "225:29:4"
            },
            "src": "210:45:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1653,
            "name": "OwnerEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1651,
                  "indexed": true,
                  "name": "_ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "279:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "279:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "278:31:4"
            },
            "src": "261:49:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1657,
            "name": "TaxRatioEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1655,
                  "indexed": true,
                  "name": "_govAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1657,
                  "src": "337:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "336:29:4"
            },
            "src": "316:50:4"
          },
          {
            "body": {
              "id": 1740,
              "nodeType": "Block",
              "src": "983:513:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1669,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "1002:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1002:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1671,
                            "name": "_getSharePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "1015:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1015:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1002:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1668,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1923,
                        1924
                      ],
                      "referencedDeclaration": 1923,
                      "src": "994:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "994:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1675,
                  "nodeType": "ExpressionStatement",
                  "src": "994:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1678,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1659,
                                "src": "1057:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 1677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1051:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1051:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 1680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1051:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3230",
                          "id": 1681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1074:2:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "1051:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1923,
                        1924
                      ],
                      "referencedDeclaration": 1923,
                      "src": "1043:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1043:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1684,
                  "nodeType": "ExpressionStatement",
                  "src": "1043:34:4"
                },
                {
                  "assignments": [
                    1686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1686,
                      "name": "_newOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 1741,
                      "src": "1088:22:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Owner_$505_memory_ptr",
                        "typeString": "struct Entity.Owner"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1685,
                        "name": "Owner",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 505,
                        "src": "1088:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Owner_$505_storage_ptr",
                          "typeString": "struct Entity.Owner"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1691,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1688,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1659,
                        "src": "1119:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1126:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1687,
                      "name": "Owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "1113:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Owner_$505_storage_ptr_$",
                        "typeString": "type(struct Entity.Owner storage pointer)"
                      }
                    },
                    "id": 1690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1113:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Owner_$505_memory",
                      "typeString": "struct Entity.Owner memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1088:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1692,
                        "name": "ownersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 529,
                        "src": "1139:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Owner_$505_storage_$",
                          "typeString": "mapping(address => struct Entity.Owner storage ref)"
                        }
                      },
                      "id": 1695,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1693,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "1149:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1149:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1139:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Owner_$505_storage",
                        "typeString": "struct Entity.Owner storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1696,
                      "name": "_newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1686,
                      "src": "1163:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Owner_$505_memory_ptr",
                        "typeString": "struct Entity.Owner memory"
                      }
                    },
                    "src": "1139:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Owner_$505_storage",
                      "typeString": "struct Entity.Owner storage ref"
                    }
                  },
                  "id": 1698,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:33:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1699,
                        "name": "ownersIdMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "1222:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1702,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1700,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "1234:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1234:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1222:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1705,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1920,
                              "src": "1264:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1264:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1703,
                            "name": "ownersList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "1248:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1248:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) returns (uint256)"
                          }
                        },
                        "id": 1707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1248:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1278:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1248:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1222:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1711,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:57:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1712,
                        "name": "isOwnerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "1290:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1715,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1713,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "1301:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1301:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1290:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1315:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1290:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1718,
                  "nodeType": "ExpressionStatement",
                  "src": "1290:29:4"
                },
                {
                  "assignments": [
                    1720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1720,
                      "name": "_manager",
                      "nodeType": "VariableDeclaration",
                      "scope": 1741,
                      "src": "1332:22:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Owner_$505_storage_ptr",
                        "typeString": "struct Entity.Owner"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1719,
                        "name": "Owner",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 505,
                        "src": "1332:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Owner_$505_storage_ptr",
                          "typeString": "struct Entity.Owner"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1724,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1721,
                      "name": "ownersMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "1357:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Owner_$505_storage_$",
                        "typeString": "mapping(address => struct Entity.Owner storage ref)"
                      }
                    },
                    "id": 1723,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1722,
                      "name": "managerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "1367:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1357:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Owner_$505_storage",
                      "typeString": "struct Entity.Owner storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:50:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1725,
                        "name": "_manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1720,
                        "src": "1393:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Owner_$505_storage_ptr",
                          "typeString": "struct Entity.Owner storage pointer"
                        }
                      },
                      "id": 1727,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 504,
                      "src": "1393:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1731,
                            "name": "_getSharePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "1433:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1433:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1728,
                            "name": "_manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1720,
                            "src": "1412:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Owner_$505_storage_ptr",
                              "typeString": "struct Entity.Owner storage pointer"
                            }
                          },
                          "id": 1729,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 504,
                          "src": "1412:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1904,
                        "src": "1412:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1412:38:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1393:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1735,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:57:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1737,
                        "name": "govAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "1477:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1736,
                      "name": "OwnerEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1653,
                      "src": "1466:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1739,
                  "nodeType": "EmitStatement",
                  "src": "1461:27:4"
                }
              ]
            },
            "documentation": "@dev allows the current user to be an owner by buying 1 share (& 1 share\r\nonly for the specify address) of the bar directly from the Manager.\r\nThere is no sybil attack as this contract is supposed to be linked to\r\nofficial documents outside the blockchain. The Manager is supposed to acquire\r\nfor non blockchain purposes documents of the co-owner.\r\nEverybody can be an owner as long as there are enough share available.\r\nAll the remaining shares belong to the Manager.\r",
            "id": 1741,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1662,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1661,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 589,
                  "src": "936:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "936:10:4"
              },
              {
                "arguments": null,
                "id": 1664,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1663,
                  "name": "isShareAvailable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 721,
                  "src": "947:16:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "947:16:4"
              },
              {
                "arguments": null,
                "id": 1666,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1665,
                  "name": "isNotOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 675,
                  "src": "964:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "964:10:4"
              }
            ],
            "name": "beOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1659,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1741,
                  "src": "913:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1658,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "912:14:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 1667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "983:0:4"
            },
            "scope": 1810,
            "src": "896:600:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1757,
              "nodeType": "Block",
              "src": "1826:78:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1748,
                      "name": "govAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "1837:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1749,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1920,
                        "src": "1850:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1850:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1837:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1752,
                  "nodeType": "ExpressionStatement",
                  "src": "1837:23:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1754,
                        "name": "govAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "1885:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1753,
                      "name": "GovEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1649,
                      "src": "1876:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1876:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1756,
                  "nodeType": "EmitStatement",
                  "src": "1871:25:4"
                }
              ]
            },
            "documentation": "@dev allows the current user to claim the role of the government.\r\nin this prototype. Like a RPG, anyone can claim this role. IRL, this contract\r\nwould be linked to real government document allowing only the goverment to\r\nclaim this role. ",
            "id": 1758,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1744,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1743,
                  "name": "isNotOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 675,
                  "src": "1806:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1806:10:4"
              },
              {
                "arguments": null,
                "id": 1746,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1745,
                  "name": "noGovYet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 652,
                  "src": "1817:8:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1817:8:4"
              }
            ],
            "name": "beGovernment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1794:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1826:0:4"
            },
            "scope": 1810,
            "src": "1773:131:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1791,
              "nodeType": "Block",
              "src": "2051:232:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1765,
                        "name": "_taxRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1760,
                        "src": "2065:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2078:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2065:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1768,
                        "name": "_taxRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1760,
                        "src": "2083:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2095:3:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "2083:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2065:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1790,
                  "nodeType": "IfStatement",
                  "src": "2062:214:4",
                  "trueBody": {
                    "id": 1789,
                    "nodeType": "Block",
                    "src": "2100:176:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1772,
                            "name": "taxRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "2115:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1773,
                            "name": "_taxRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1760,
                            "src": "2126:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2115:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1775,
                        "nodeType": "ExpressionStatement",
                        "src": "2115:20:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2175:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1776,
                            "name": "_updateRevenuesOnProduct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1576,
                            "src": "2150:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2150:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1779,
                        "nodeType": "ExpressionStatement",
                        "src": "2150:27:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2217:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 1780,
                            "name": "_updateRevenuesOnProduct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1576,
                            "src": "2192:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2192:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1783,
                        "nodeType": "ExpressionStatement",
                        "src": "2192:27:4"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1785,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1920,
                                "src": "2253:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2253:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1784,
                            "name": "TaxRatioEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1657,
                            "src": "2239:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2239:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1788,
                        "nodeType": "EmitStatement",
                        "src": "2234:30:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev allows the government to define the tax ratio applicable on beverages ",
            "id": 1792,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1763,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1762,
                  "name": "isGov",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 642,
                  "src": "2045:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2045:5:4"
              }
            ],
            "name": "setTaxRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1760,
                  "name": "_taxRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 1792,
                  "src": "2020:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1759,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2020:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2019:16:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2051:0:4"
            },
            "scope": 1810,
            "src": "1999:284:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1799,
              "nodeType": "Block",
              "src": "2379:34:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1797,
                    "name": "taxRatio",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 492,
                    "src": "2397:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1796,
                  "id": 1798,
                  "nodeType": "Return",
                  "src": "2390:15:4"
                }
              ]
            },
            "documentation": "@return the ratio of taxes ",
            "id": 1800,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getTaxRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2350:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1795,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "2373:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1794,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2373:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2372:6:4"
            },
            "scope": 1810,
            "src": "2330:83:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1808,
              "nodeType": "Block",
              "src": "2528:42:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1805,
                      "name": "_getSharePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1475,
                      "src": "2546:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2546:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1804,
                  "id": 1807,
                  "nodeType": "Return",
                  "src": "2539:23:4"
                }
              ]
            },
            "documentation": "for testing purpose of an internal function ",
            "id": 1809,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getSharePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2499:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1803,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1809,
                  "src": "2522:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1802,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2522:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2521:6:4"
            },
            "scope": 1810,
            "src": "2477:93:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1811,
        "src": "175:2398:4"
      }
    ],
    "src": "0:2575:4"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Jacques/SOLIDITY-PROJECTS/finalproject2/contracts/Owners.sol",
    "exportedSymbols": {
      "Owners": [
        1810
      ]
    },
    "id": 1811,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1642,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/C/Users/Jacques/SOLIDITY-PROJECTS/finalproject2/contracts/Entity.sol",
        "file": "./Entity.sol",
        "id": 1643,
        "nodeType": "ImportDirective",
        "scope": 1811,
        "sourceUnit": 1584,
        "src": "28:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1644,
              "name": "Entity",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1583,
              "src": "194:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Entity_$1583",
                "typeString": "contract Entity"
              }
            },
            "id": 1645,
            "nodeType": "InheritanceSpecifier",
            "src": "194:6:4"
          }
        ],
        "contractDependencies": [
          1583
        ],
        "contractKind": "contract",
        "documentation": "@title Owners describes specific functions to endorse the role of the Government\r\nor to be a co-owner of the bar ",
        "fullyImplemented": true,
        "id": 1810,
        "linearizedBaseContracts": [
          1810,
          1583
        ],
        "name": "Owners",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 1649,
            "name": "GovEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1647,
                  "indexed": true,
                  "name": "_govAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "226:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "225:29:4"
            },
            "src": "210:45:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1653,
            "name": "OwnerEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1651,
                  "indexed": true,
                  "name": "_ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "279:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "279:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "278:31:4"
            },
            "src": "261:49:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1657,
            "name": "TaxRatioEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1655,
                  "indexed": true,
                  "name": "_govAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1657,
                  "src": "337:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "336:29:4"
            },
            "src": "316:50:4"
          },
          {
            "body": {
              "id": 1740,
              "nodeType": "Block",
              "src": "983:513:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1669,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "1002:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1002:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1671,
                            "name": "_getSharePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "1015:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1015:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1002:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1668,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1923,
                        1924
                      ],
                      "referencedDeclaration": 1923,
                      "src": "994:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "994:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1675,
                  "nodeType": "ExpressionStatement",
                  "src": "994:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1678,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1659,
                                "src": "1057:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 1677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1051:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1051:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 1680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1051:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3230",
                          "id": 1681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1074:2:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "1051:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1923,
                        1924
                      ],
                      "referencedDeclaration": 1923,
                      "src": "1043:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1043:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1684,
                  "nodeType": "ExpressionStatement",
                  "src": "1043:34:4"
                },
                {
                  "assignments": [
                    1686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1686,
                      "name": "_newOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 1741,
                      "src": "1088:22:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Owner_$505_memory_ptr",
                        "typeString": "struct Entity.Owner"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1685,
                        "name": "Owner",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 505,
                        "src": "1088:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Owner_$505_storage_ptr",
                          "typeString": "struct Entity.Owner"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1691,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1688,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1659,
                        "src": "1119:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1126:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1687,
                      "name": "Owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "1113:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Owner_$505_storage_ptr_$",
                        "typeString": "type(struct Entity.Owner storage pointer)"
                      }
                    },
                    "id": 1690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1113:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Owner_$505_memory",
                      "typeString": "struct Entity.Owner memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1088:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1692,
                        "name": "ownersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 529,
                        "src": "1139:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Owner_$505_storage_$",
                          "typeString": "mapping(address => struct Entity.Owner storage ref)"
                        }
                      },
                      "id": 1695,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1693,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "1149:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1149:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1139:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Owner_$505_storage",
                        "typeString": "struct Entity.Owner storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1696,
                      "name": "_newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1686,
                      "src": "1163:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Owner_$505_memory_ptr",
                        "typeString": "struct Entity.Owner memory"
                      }
                    },
                    "src": "1139:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Owner_$505_storage",
                      "typeString": "struct Entity.Owner storage ref"
                    }
                  },
                  "id": 1698,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:33:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1699,
                        "name": "ownersIdMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "1222:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1702,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1700,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "1234:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1234:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1222:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1705,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1920,
                              "src": "1264:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1264:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1703,
                            "name": "ownersList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "1248:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1248:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) returns (uint256)"
                          }
                        },
                        "id": 1707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1248:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1278:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1248:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1222:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1711,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:57:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1712,
                        "name": "isOwnerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "1290:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1715,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1713,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "1301:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1301:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1290:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1315:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1290:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1718,
                  "nodeType": "ExpressionStatement",
                  "src": "1290:29:4"
                },
                {
                  "assignments": [
                    1720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1720,
                      "name": "_manager",
                      "nodeType": "VariableDeclaration",
                      "scope": 1741,
                      "src": "1332:22:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Owner_$505_storage_ptr",
                        "typeString": "struct Entity.Owner"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1719,
                        "name": "Owner",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 505,
                        "src": "1332:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Owner_$505_storage_ptr",
                          "typeString": "struct Entity.Owner"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1724,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1721,
                      "name": "ownersMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "1357:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Owner_$505_storage_$",
                        "typeString": "mapping(address => struct Entity.Owner storage ref)"
                      }
                    },
                    "id": 1723,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1722,
                      "name": "managerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "1367:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1357:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Owner_$505_storage",
                      "typeString": "struct Entity.Owner storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:50:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1725,
                        "name": "_manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1720,
                        "src": "1393:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Owner_$505_storage_ptr",
                          "typeString": "struct Entity.Owner storage pointer"
                        }
                      },
                      "id": 1727,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 504,
                      "src": "1393:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1731,
                            "name": "_getSharePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "1433:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1433:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1728,
                            "name": "_manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1720,
                            "src": "1412:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Owner_$505_storage_ptr",
                              "typeString": "struct Entity.Owner storage pointer"
                            }
                          },
                          "id": 1729,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 504,
                          "src": "1412:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1904,
                        "src": "1412:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1412:38:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1393:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1735,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:57:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1737,
                        "name": "govAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "1477:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1736,
                      "name": "OwnerEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1653,
                      "src": "1466:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1739,
                  "nodeType": "EmitStatement",
                  "src": "1461:27:4"
                }
              ]
            },
            "documentation": "@dev allows the current user to be an owner by buying 1 share (& 1 share\r\nonly for the specify address) of the bar directly from the Manager.\r\nThere is no sybil attack as this contract is supposed to be linked to\r\nofficial documents outside the blockchain. The Manager is supposed to acquire\r\nfor non blockchain purposes documents of the co-owner.\r\nEverybody can be an owner as long as there are enough share available.\r\nAll the remaining shares belong to the Manager.\r",
            "id": 1741,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1662,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1661,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 589,
                  "src": "936:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "936:10:4"
              },
              {
                "arguments": null,
                "id": 1664,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1663,
                  "name": "isShareAvailable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 721,
                  "src": "947:16:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "947:16:4"
              },
              {
                "arguments": null,
                "id": 1666,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1665,
                  "name": "isNotOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 675,
                  "src": "964:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "964:10:4"
              }
            ],
            "name": "beOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1659,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1741,
                  "src": "913:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1658,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "912:14:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 1667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "983:0:4"
            },
            "scope": 1810,
            "src": "896:600:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1757,
              "nodeType": "Block",
              "src": "1826:78:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1748,
                      "name": "govAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "1837:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1749,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1920,
                        "src": "1850:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1850:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1837:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1752,
                  "nodeType": "ExpressionStatement",
                  "src": "1837:23:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1754,
                        "name": "govAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "1885:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1753,
                      "name": "GovEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1649,
                      "src": "1876:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1876:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1756,
                  "nodeType": "EmitStatement",
                  "src": "1871:25:4"
                }
              ]
            },
            "documentation": "@dev allows the current user to claim the role of the government.\r\nin this prototype. Like a RPG, anyone can claim this role. IRL, this contract\r\nwould be linked to real government document allowing only the goverment to\r\nclaim this role. ",
            "id": 1758,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1744,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1743,
                  "name": "isNotOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 675,
                  "src": "1806:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1806:10:4"
              },
              {
                "arguments": null,
                "id": 1746,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1745,
                  "name": "noGovYet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 652,
                  "src": "1817:8:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1817:8:4"
              }
            ],
            "name": "beGovernment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1794:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1826:0:4"
            },
            "scope": 1810,
            "src": "1773:131:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1791,
              "nodeType": "Block",
              "src": "2051:232:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1765,
                        "name": "_taxRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1760,
                        "src": "2065:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2078:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2065:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1768,
                        "name": "_taxRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1760,
                        "src": "2083:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2095:3:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "2083:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2065:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1790,
                  "nodeType": "IfStatement",
                  "src": "2062:214:4",
                  "trueBody": {
                    "id": 1789,
                    "nodeType": "Block",
                    "src": "2100:176:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1772,
                            "name": "taxRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "2115:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1773,
                            "name": "_taxRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1760,
                            "src": "2126:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2115:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1775,
                        "nodeType": "ExpressionStatement",
                        "src": "2115:20:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2175:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1776,
                            "name": "_updateRevenuesOnProduct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1576,
                            "src": "2150:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2150:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1779,
                        "nodeType": "ExpressionStatement",
                        "src": "2150:27:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2217:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 1780,
                            "name": "_updateRevenuesOnProduct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1576,
                            "src": "2192:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2192:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1783,
                        "nodeType": "ExpressionStatement",
                        "src": "2192:27:4"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1785,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1920,
                                "src": "2253:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2253:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1784,
                            "name": "TaxRatioEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1657,
                            "src": "2239:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2239:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1788,
                        "nodeType": "EmitStatement",
                        "src": "2234:30:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev allows the government to define the tax ratio applicable on beverages ",
            "id": 1792,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1763,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1762,
                  "name": "isGov",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 642,
                  "src": "2045:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2045:5:4"
              }
            ],
            "name": "setTaxRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1760,
                  "name": "_taxRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 1792,
                  "src": "2020:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1759,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2020:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2019:16:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2051:0:4"
            },
            "scope": 1810,
            "src": "1999:284:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1799,
              "nodeType": "Block",
              "src": "2379:34:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1797,
                    "name": "taxRatio",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 492,
                    "src": "2397:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1796,
                  "id": 1798,
                  "nodeType": "Return",
                  "src": "2390:15:4"
                }
              ]
            },
            "documentation": "@return the ratio of taxes ",
            "id": 1800,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getTaxRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2350:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1795,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "2373:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1794,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2373:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2372:6:4"
            },
            "scope": 1810,
            "src": "2330:83:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1808,
              "nodeType": "Block",
              "src": "2528:42:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1805,
                      "name": "_getSharePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1475,
                      "src": "2546:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2546:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1804,
                  "id": 1807,
                  "nodeType": "Return",
                  "src": "2539:23:4"
                }
              ]
            },
            "documentation": "for testing purpose of an internal function ",
            "id": 1809,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getSharePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2499:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1803,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1809,
                  "src": "2522:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1802,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2522:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2521:6:4"
            },
            "scope": 1810,
            "src": "2477:93:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1811,
        "src": "175:2398:4"
      }
    ],
    "src": "0:2575:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x8f0483125fcb9aaaefa9209d8e9d7b9c8b9fb90f",
      "transactionHash": "0x64d36cea50f8b13b7026b3f68c9ee1b0da98f8027dbef92c1577ac5fa60ba620"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-08-27T00:13:51.228Z"
}