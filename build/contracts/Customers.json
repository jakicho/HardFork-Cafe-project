{
  "contractName": "Customers",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "stopContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_salaryRatio",
          "type": "uint256"
        }
      ],
      "name": "setSalaryRatio",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAvailableJobs",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEconomicVariables",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setBeerPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wineStock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "serveCustomer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSharePrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTaxRatio",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendRatio",
          "type": "uint256"
        }
      ],
      "name": "setDividendRatio",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "beerStock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEmployeesListNumbers",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTreasuryBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "beOwner",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "quitJob",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "beEmployee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwnerListNumbers",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_employee",
          "type": "address"
        }
      ],
      "name": "fireEmployee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "resumeContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getRevenueDistribution",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setWinePrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getGovBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "beGovernment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBarVariables",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOrdersData",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getGovAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBarFixData",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getUserAccount",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_taxRatio",
          "type": "uint256"
        }
      ],
      "name": "setTaxRatio",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "BuyOrderEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EmployeeEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_govAddress",
          "type": "address"
        }
      ],
      "name": "GovEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_ownerAddress",
          "type": "address"
        }
      ],
      "name": "OwnerEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_govAddress",
          "type": "address"
        }
      ],
      "name": "TaxRatioEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "BeerPriceEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WinePriceEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SalaryRatioEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DividendRatioEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WithdrawEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "orderBeer",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "orderWine",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "customer",
          "type": "address"
        }
      ],
      "name": "getNbPendingOrders",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_productId",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "192:991:0:-;;;699:5:2;682:22;;;;;;;;;;;;;;;;;;;;799:3;769:33;;;;;;;;;;;;;;;;;;;;262:1:1;242:21;;5664:22:2;;:::i;:::-;5234:10;5217:14;;:27;;;;;;;;;;;;;;;;;;5255:26;;;;;;;;;;;;;;;;;;:7;:26;;;;;;;;;;;;:::i;:::-;;5334:21;5321:10;:34;;;;5392:3;5380:9;:15;;;;5473:2;5458:12;:17;;;;5540:3;5528:9;:15;;;;5566:3;5554:9;:15;;;;5593:2;5582:8;:13;;;;5620:2;5606:11;:16;;;;5649:2;5633:13;:18;;;;5689:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5714:1;5689:27;;;5664:52;;5751:9;5727;:21;5737:10;5727:21;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5827:1;5797:10;5813;5797:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5797:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:31;5771:11;:23;5783:10;5771:23;;;;;;;;;;;;;;;:57;;;;5864:4;5839:10;:22;5850:10;5839:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5896:64;;;;;;;;;5905:18;5896:64;;;;;;;;;;;;5925:17;5896:64;;;;5944:3;5896:64;;;;;;5949:1;5896:64;;;;5952:1;5896:64;;;;5955:1;5896:64;;;;5958:1;5896:64;;;5881:9;5891:1;5881:12;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5986:64;;;;;;;;;5995:18;5986:64;;;;;;;;;;;;6015:17;5986:64;;;;6034:3;5986:64;;;;;;6039:1;5986:64;;;;6042:1;5986:64;;;;6045:1;5986:64;;;;6048:1;5986:64;;;5971:9;5981:1;5971:12;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6063:27;6088:1;6063:24;;;:27;;;:::i;:::-;6101;6126:1;6101:24;;;:27;;;:::i;:::-;5185:951;192:991:0;;14798:510:2;14862:24;14889:9;14899:3;14889:14;;;;;;;;;;;;14862:41;;14930:36;14962:3;14930:27;14948:8;;14930:7;:13;;;:17;;;;;;:27;;;;;:::i;:::-;:31;;;;;;:36;;;;;:::i;:::-;14914:7;:13;;:52;;;;14998:62;15056:3;14998:53;15039:11;;15000:32;15018:7;:13;;;15000:7;:13;;;:17;;;;;;:32;;;;;:::i;:::-;14998:40;;;;;;:53;;;;;:::i;:::-;:57;;;;;;:62;;;;;:::i;:::-;14977:7;:18;;:83;;;;15096:88;15180:3;15096:79;15161:13;;15098:56;15135:7;:18;;;15098:32;15116:7;:13;;;15098:7;:13;;;:17;;;;;;:32;;;;;:::i;:::-;:36;;;;;;:56;;;;;:::i;:::-;15096:64;;;;;;:79;;;;;:::i;:::-;:83;;;;;;:88;;;;;:::i;:::-;15071:7;:22;;:113;;;;15216:84;15277:7;:22;;;15216:56;15253:7;:18;;;15216:32;15234:7;:13;;;15216:7;:13;;;:17;;;;;;:32;;;;;:::i;:::-;:36;;;;;;:56;;;;;:::i;:::-;:60;;;;;;:84;;;;;:::i;:::-;15195:7;:18;;:105;;;;14798:510;;:::o;144:147:5:-;202:7;218:9;234:1;230;:5;218:17;;254:1;249;:6;:20;;;;268:1;263;259;:5;;;;;;;;:10;249:20;242:28;;;;;;284:1;277:8;;144:147;;;;;:::o;297:270::-;355:7;446:9;462:1;458;:5;;;;;;;;446:17;;560:1;553:8;;297:270;;;;;:::o;573:113::-;631:7;659:1;654;:6;;647:14;;;;;;679:1;675;:5;668:12;;573:113;;;;:::o;192:991:0:-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "192:991:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3497:9:2;;;;;;;;;;;3496:10;3488:19;;;;;;;;192:991:0;6228:76:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6228:76:2;;;;;;7230:299;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7230:299:2;;;;;;;;;;;;;;;;;;;;;;;;;;13921:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13921:115:2;;;;;;;;;;;;;;;;;;;;;;;11788:266;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11788:266:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8105:1366;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8105:1366:2;;;;;;6546:221;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6546:221:2;;;;;;;;;;;;;;;;;;;;;;;;;;1109:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1109:21:2;;;;;;;;;;;;;;;;;;;;;;;891:127:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;891:127:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1686:1448:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1686:1448:1;;;;;;2477:93:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2477:93:4;;;;;;;;;;;;;;;;;;;;;;;2330:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2330:83:4;;;;;;;;;;;;;;;;;;;;;;;7664:313:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7664:313:2;;;;;;;;;;;;;;;;;;;;;;;;;;13810:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13810:103:2;;;;;;;;;;;;;;;;;;;;;;;1081:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1081:21:2;;;;;;;;;;;;;;;;;;;;;;;13524:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13524:140:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13419:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13419:97:2;;;;;;;;;;;;;;;;;;;;;;;896:600:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3142:83:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3142:83:1;;;;;;294:308:0;;;;;;609:422:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;609:422:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13672:130:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13672:130:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3233:131:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3233:131:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;6312:79:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6312:79:2;;;;;;9994:349;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9994:349:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6847:221;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6847:221:2;;;;;;;;;;;;;;;;;;;;;;;;;;13324:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13324:87:2;;;;;;;;;;;;;;;;;;;;;;;1773:131:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1773:131:4;;;;;;11149:477:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11149:477:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1077:103:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1077:103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;643:178;;;;;;1214:217:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1214:217:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13226:90:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13226:90:2;;;;;;;;;;;;;;;;;;;;;;;;;;;10597:274;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10597:274:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10597:274:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12397:735;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12397:735:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12397:735:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:284:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1999:284:4;;;;;;;;;;;;;;;;;;;;;;;;;;6228:76:2;3763:14;;;;;;;;;;;3749:28;;:10;:28;;;3741:37;;;;;;;;6292:4;6280:9;;:16;;;;;;;;;;;;;;;;;;6228:76::o;7230:299::-;3763:14;;;;;;;;;;;3749:28;;:10;:28;;;3741:37;;;;;;;;7322:1;7306:12;:17;;:39;;;;;7342:3;7327:12;:18;7306:39;7303:219;;;7376:12;7362:11;:26;;;;7403:27;7428:1;7403:24;:27::i;:::-;7445;7470:1;7445:24;:27::i;:::-;7492:18;;;;;;;;;;7303:219;7230:299;:::o;13921:115::-;13969:4;14008:13;:20;;;;13993:12;;:35;13986:42;;13921:115;:::o;11788:266::-;11847:4;11853;11859;11865;11871;11888:14;11934;11905:9;11915:1;11905:12;;;;;;;;;;;;:18;;;11888:35;;11951:9;11961:1;11951:12;;;;;;;;;;;;:18;;;11934:35;;11987:9;11998;12009:11;;12022:13;;12037:8;;11980:66;;;;;;;;;;11788:266;;;;;;;:::o;8105:1366::-;8170:22;8203:26;8671:20;9080:26;4860:14;;;;;;;;;;;4846:28;;:10;:28;;;:69;;;;4905:10;;;;;;;;;;;4891:24;;:10;:24;;;4846:69;:108;;;;4932:10;:22;4943:10;4932:22;;;;;;;;;;;;;;;;;;;;;;;;;4846:108;:150;;;;4971:13;:25;4985:10;4971:25;;;;;;;;;;;;;;;;;;;;;;;;;4846:150;4824:173;;;;;;;;3497:9;;;;;;;;;;;3496:10;3488:19;;;;;;;;8240:4;8232:21;;;8203:50;;8281:10;;;;;;;;;;;8267:24;;:10;:24;;;8264:1167;;;8355:10;;8335:30;;8393:1;8380:10;:14;;;;8417:10;:15;;:34;8433:17;8417:34;;;;;;;;;;;;;;;;;;;;;;;8409:43;;;;;;;;8523:17;8499:21;:41;8482:4;8474:21;;;:66;8467:74;;;;;;8264:1167;;;8578:14;;;;;;;;;;;8564:28;;:10;:28;;;:54;;;;8596:10;:22;8607:10;8596:22;;;;;;;;;;;;;;;;;;;;;;;;;8564:54;8561:870;;;8694:9;:21;8704:10;8694:21;;;;;;;;;;;;;;;8671:44;;8750:6;:14;;;8730:34;;8796:1;8779:6;:14;;:18;;;;8820:10;:15;;:34;8836:17;8820:34;;;;;;;;;;;;;;;;;;;;;;;8812:43;;;;;;;;8926:17;8902:21;:41;8885:4;8877:21;;;:66;8870:74;;;;;;8561:870;;;8967:13;:25;8981:10;8967:25;;;;;;;;;;;;;;;;;;;;;;;;;:56;;;;8996:15;:27;9012:10;8996:27;;;;;;;;;;;;;;;;;;;;;;;;;8967:56;8964:467;;;9109:12;:24;9122:10;9109:24;;;;;;;;;;;;;;;9080:53;;9168:9;:17;;;9148:37;;9220:1;9200:9;:17;;:21;;;;9266:5;9236:15;:27;9252:10;9236:27;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;9294:10;:15;;:34;9310:9;:17;;;9294:34;;;;;;;;;;;;;;;;;;;;;;;9286:43;;;;;;;;9400:17;9376:21;:41;9359:4;9351:21;;;:66;9344:74;;;;;;8964:467;8561:870;8264:1167;9448:15;;;;;;;;;;8105:1366;;;;:::o;6546:221::-;6616:22;3763:14;;;;;;;;;;;3749:28;;:10;:28;;;3741:37;;;;;;;;6641:9;6651:1;6641:12;;;;;;;;;;;;6616:37;;6678:11;6664:5;:11;;:25;;;;6700:27;6725:1;6700:24;:27::i;:::-;6743:16;;;;;;;;;;6546:221;;:::o;1109:21::-;;;;:::o;891:127:0:-;959:4;981:21;:31;1003:8;981:31;;;;;;;;;;;;;;;;974:38;;891:127;;;:::o;1686:1448:1:-;1812:22;;:::i;:::-;2215:16;2285:24;2601:21;2694:22;2889:6;2940:21;2992:20;3497:9:2;;;;;;;;;;;3496:10;3488:19;;;;;;;;4303:13;:25;4317:10;4303:25;;;;;;;;;;;;;;;;;;;;;;;;;4295:34;;;;;;;;404:10:1;:17;;;;389:12;;:32;381:41;;;;;;;;1783:10;:17;;;;1768:12;;:32;1760:41;;;;;;;;1837:10;1848:12;;1837:24;;;;;;;;;;;;;;;;;;;;1812:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:18;1918:34;;;;;;;;:6;:12;;;:34;;;;;;;;;1915:160;;;1969:9;;:11;;;;;;;;;;;;;;1915:160;;;2017:18;2001:34;;;;;;;;:6;:12;;;:34;;;;;;;;;1998:77;;;2052:9;;:11;;;;;;;;;;;;;;1998:77;1915:160;2129:21;:31;2151:8;2129:31;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;2234:6;:15;;;2215:34;;2312:12;:24;2325:10;2312:24;;;;;;;;;;;;;;;2285:51;;2365:38;2385:6;:17;;;2365:7;:15;;;:19;;:38;;;;:::i;:::-;2347:7;:15;;:56;;;;2429:28;2444:6;:12;;;2429:10;;:14;;:28;;;;:::i;:::-;2416:10;:41;;;;2486:38;2506:6;:17;;;2486:15;;:19;;:38;;;;:::i;:::-;2468:15;:56;;;;2569:6;:21;;;;2625:36;2651:9;;2625:6;:21;;;:25;;:36;;;;:::i;:::-;2601:60;;2719:9;:25;2729:14;;;;;;;;;;;2719:25;;;;;;;;;;;;;;;2694:50;;2773:76;2794:54;2830:10;:17;;;;2818:9;;2815:1;:12;:32;2794:16;:20;;:54;;;;:::i;:::-;2773:8;:16;;;:20;;:76;;;;:::i;:::-;2755:8;:16;;:94;;;;2896:1;2889:8;;2884:216;2901:10;:17;;;;2899:1;:19;2884:216;;;2964:10;2975:1;2964:13;;;;;;;;;;;;;;;;;;;;;;;;;;;2940:37;;3015:9;:24;3025:13;3015:24;;;;;;;;;;;;;;;2992:47;;3072:16;3054:6;:14;;;:34;;;;;;;;;;;2920:3;;;;;;;2884:216;;;3112:12;;:14;;;;;;;;;;;;;1686:1448;;;;;;;;:::o;2477:93:4:-;2522:4;2546:16;:14;:16::i;:::-;2539:23;;2477:93;:::o;2330:83::-;2373:4;2397:8;;2390:15;;2330:83;:::o;7664:313:2:-;3763:14;;;;;;;;;;;3749:28;;:10;:28;;;3741:37;;;;;;;;7762:1;7744:14;:19;;:43;;;;;7784:3;7767:14;:20;7744:43;7741:229;;;7820:14;7804:13;:30;;;;7849:27;7874:1;7849:24;:27::i;:::-;7891;7916:1;7891:24;:27::i;:::-;7938:20;;;;;;;;;;7741:229;7664:313;:::o;13810:103::-;13860:4;13892;13884:21;;;13877:28;;13810:103;:::o;1081:21::-;;;;:::o;13524:140::-;13579:4;13585;13608:13;:20;;;;13630:12;;13601:42;;;;13524:140;;:::o;13419:97::-;13469:4;13493:15;;13486:22;;13419:97;:::o;896:600:4:-;1088:22;;:::i;:::-;1332;3497:9:2;;;;;;;;;;;3496:10;3488:19;;;;;;;;4641:9;;4621:10;:17;;;;:29;4613:38;;;;;;;;4211:10;:22;4222:10;4211:22;;;;;;;;;;;;;;;;;;;;;;;;;4210:23;4202:32;;;;;;;;1015:16:4;:14;:16::i;:::-;1002:9;:29;994:38;;;;;;;;1074:2;1057:5;;1051:19;;:25;;1043:34;;;;;;;;1113:15;;;;;;;;;1119:5;;1113:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1126:1;1113:15;;;1088:40;;1163:9;1139;:21;1149:10;1139:21;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1278:1;1248:10;1264;1248:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1248:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:31;1222:11;:23;1234:10;1222:23;;;;;;;;;;;;;;;:57;;;;1315:4;1290:10;:22;1301:10;1290:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1357:9;:25;1367:14;;;;;;;;;;;1357:25;;;;;;;;;;;;;;;1332:50;;1412:38;1433:16;:14;:16::i;:::-;1412:8;:16;;;:20;;:38;;;;:::i;:::-;1393:8;:16;;:57;;;;1477:10;;;;;;;;;;;1466:22;;;;;;;;;;;;896:600;;;;:::o;3142:83:1:-;4303:13:2;:25;4317:10;4303:25;;;;;;;;;;;;;;;;;;;;;;;;;4295:34;;;;;;;;3190:27:1;3206:10;3190:15;:27::i;:::-;;3142:83::o;294:308:0:-;408:25;;:::i;:::-;3497:9:2;;;;;;;;;;;3496:10;3488:19;;;;;;;;3592:1;3580:9;;:13;3572:22;;;;;;;;386:12:0;396:1;386:9;:12::i;:::-;373:9;:25;365:34;;;;;;;;436:9;446:1;436:12;;;;;;;;;;;;408:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:10;457:9;:18;;:31;;;;;;;;;;;497:10;513:9;497:26;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;497:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;532:21;:33;554:10;532:33;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;581:15;;;;;;;;;;294:308;:::o;609:422:1:-;737:28;;:::i;:::-;4520:13:2;:25;4534:10;4520:25;;;;;;;;;;;;;;;;;;;;;;;;;4519:26;4511:35;;;;;;;;4739:13;:20;;;;4724:12;;:35;4716:44;;;;;;;;723:2:1;706:5;;700:19;;:25;;692:34;;;;;;;;768:18;;;;;;;;;777:5;;768:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;784:1;768:18;;;737:49;;824:12;797;:24;810:10;797:24;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;948:1;915:13;934:10;915:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;915:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;886:14;:26;901:10;886:26;;;;;;;;;;;;;;;:63;;;;988:4;960:13;:25;974:10;960:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1008:15;;;;;;;;;;609:422;;;:::o;13672:130:2:-;13723:4;13729;13752:10;:17;;;;13771:9;;13745:36;;;;13672:130;;:::o;3233:131:1:-;3763:14:2;;;;;;;;;;;3749:28;;:10;:28;;;3741:37;;;;;;;;3309:9:1;4422:13:2;:24;4436:9;4422:24;;;;;;;;;;;;;;;;;;;;;;;;;4414:33;;;;;;;;3330:26:1;3346:9;3330:15;:26::i;:::-;;3789:1:2;3233:131:1;:::o;6312:79:2:-;3763:14;;;;;;;;;;;3749:28;;:10;:28;;;3741:37;;;;;;;;6378:5;6366:9;;:17;;;;;;;;;;;;;;;;;;6312:79::o;9994:349::-;10063:4;10069;10075;10081;10087;10104:23;;:::i;:::-;10130:9;10140:3;10130:14;;;;;;;;;;;;10104:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10176:7;:13;;;10204:7;:13;;;10232:7;:18;;;10265:7;:22;;;10302:7;:18;;;10155:180;;;;;;;;;;9994:349;;;;;;;;:::o;6847:221::-;6917:22;3763:14;;;;;;;;;;;3749:28;;:10;:28;;;3741:37;;;;;;;;6942:9;6952:1;6942:12;;;;;;;;;;;;6917:37;;6979:11;6965:5;:11;;:25;;;;7001:27;7026:1;7001:24;:27::i;:::-;7044:16;;;;;;;;;;6847:221;;:::o;13324:87::-;13369:4;13393:10;;13386:17;;13324:87;:::o;1773:131:4:-;4211:10:2;:22;4222:10;4211:22;;;;;;;;;;;;;;;;;;;;;;;;;4210:23;4202:32;;;;;;;;4048:3;4034:10;;;;;;;;;;;:17;;;4026:26;;;;;;;;1850:10:4;1837;;:23;;;;;;;;;;;;;;;;;;1885:10;;;;;;;;;;;1876:20;;;;;;;;;;;;1773:131::o;11149:477:2:-;11203:4;11209;11215;11221;11227;11233;11250:21;11317:19;11388:20;11274:32;11288:10;:17;;;;11274:9;;:13;;:32;;;;:::i;:::-;11250:56;;11339:38;11356:13;:20;;;;11339:12;;:16;;:38;;;;:::i;:::-;11317:60;;11419:4;11411:21;;;11388:44;;11464:16;11495:15;11525;;11555:14;11584:9;;11608;;11443:175;;;;;;;;;;;;11149:477;;;;;;;;;:::o;1077:103:0:-;1132:4;1153:21;1163:10;1153:9;:21::i;:::-;1146:28;;1077:103;;;:::o;643:178::-;3497:9:2;;;;;;;;;;;3496:10;3488:19;;;;;;;;3679:1;3667:9;;:13;3659:22;;;;;;;;735:12:0;745:1;735:9;:12::i;:::-;722:9;:25;714:34;;;;;;;;757:10;773:9;783:1;773:12;;;;;;;;;;;;757:29;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;757:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:15;;;;;;;;;;643:178::o;1214:217:1:-;1261:4;1267;1284:21;1328:12;;1308:10;:17;;;;:32;1284:56;;1359:16;1377:12;;1351:39;;;;1214:217;;;:::o;13226:90:2:-;13271:7;13298:10;;;;;;;;;;;13291:17;;13226:90;:::o;10597:274::-;10649:6;10657:4;10663:7;10672;10681:4;10687;10725:7;10747:10;;10772:14;;;;;;;;;;;10801:10;;;;;;;;;;;10826:9;;10850:12;;10704:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10597:274;;;;;;:::o;12397:735::-;12466:6;12474:4;12480;12537:19;;:::i;:::-;12694:25;;:::i;:::-;12966:27;;:::i;:::-;12500:10;:20;12511:8;12500:20;;;;;;;;;;;;;;;;;;;;;;;;;12497:597;;;12559:9;:19;12569:8;12559:19;;;;;;;;;;;;;;;12537:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12600:6;:11;;;12613:6;:14;;;12629:1;12593:38;;;;;;;;;;;;;;12497:597;12654:13;:23;12668:8;12654:23;;;;;;;;;;;;;;;;;;;;;;;;;12651:443;;;12722:12;:22;12735:8;12722:22;;;;;;;;;;;;;;;12694:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12767:9;:14;;;12783:9;:17;;;12802:1;12759:45;;;;;;;;;;;;;;12651:443;12839:10;;;;;;;;;;;12827:22;;:8;:22;;;12824:270;;;12887:10;;12899:1;12866:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12824:270;12924:15;:25;12940:8;12924:25;;;;;;;;;;;;;;;;;;;;;;;;;12921:173;;;12996:12;:22;13009:8;12996:22;;;;;;;;;;;;;;;12966:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13041:11;:16;;;13059:11;:19;;;13080:1;13033:49;;;;;;;;;;;;;;12921:173;13118:1;13122;13106:18;;;;;;;;;;;;;;;;;;;;;;;;;;;12397:735;;;;;;;;;:::o;1999:284:4:-;3956:10:2;;;;;;;;;;;3942:24;;:10;:24;;;3934:33;;;;;;;;2078:1:4;2065:9;:14;;:33;;;;;2095:3;2083:9;:15;2065:33;2062:214;;;2126:9;2115:8;:20;;;;2150:27;2175:1;2150:24;:27::i;:::-;2192;2217:1;2192:24;:27::i;:::-;2253:10;2239:25;;;;;;;;;;;;2062:214;1999:284;:::o;14798:510:2:-;14862:24;14889:9;14899:3;14889:14;;;;;;;;;;;;14862:41;;14930:36;14962:3;14930:27;14948:8;;14930:7;:13;;;:17;;:27;;;;:::i;:::-;:31;;:36;;;;:::i;:::-;14914:7;:13;;:52;;;;14998:62;15056:3;14998:53;15039:11;;15000:32;15018:7;:13;;;15000:7;:13;;;:17;;:32;;;;:::i;:::-;14998:40;;:53;;;;:::i;:::-;:57;;:62;;;;:::i;:::-;14977:7;:18;;:83;;;;15096:88;15180:3;15096:79;15161:13;;15098:56;15135:7;:18;;;15098:32;15116:7;:13;;;15098:7;:13;;;:17;;:32;;;;:::i;:::-;:36;;:56;;;;:::i;:::-;15096:64;;:79;;;;:::i;:::-;:83;;:88;;;;:::i;:::-;15071:7;:22;;:113;;;;15216:84;15277:7;:22;;;15216:56;15253:7;:18;;;15216:32;15234:7;:13;;;15216:7;:13;;;:17;;:32;;;;:::i;:::-;:36;;:56;;;;:::i;:::-;:60;;:84;;;;:::i;:::-;15195:7;:18;;:105;;;;14798:510;;:::o;692:133:5:-;750:7;766:9;782:1;778;:5;766:17;;802:1;797;:6;;790:14;;;;;;818:1;811:8;;692:133;;;;;:::o;297:270::-;355:7;446:9;462:1;458;:5;;;;;;;;446:17;;560:1;553:8;;297:270;;;;;:::o;144:147::-;202:7;218:9;234:1;230;:5;218:17;;254:1;249;:6;:20;;;;268:1;263;259;:5;;;;;;;;:10;249:20;242:28;;;;;;284:1;277:8;;144:147;;;;;:::o;14176:114:2:-;14224:4;14247:25;14262:9;;14247:10;;:14;;:25;;;;:::i;:::-;14240:32;;14176:114;:::o;3372:751:1:-;3432:4;3448:10;3687:19;3461:14;:25;3476:9;3461:25;;;;;;;;;;;;;;;;3448:38;;3523:1;3500:13;:20;;;;:24;:59;;;;3558:1;3536:13;:20;;;;:23;3528:5;:31;3500:59;3497:360;;;3709:13;3744:1;3723:13;:20;;;;:22;3709:37;;;;;;;;;;;;;;;;;;;;;;;;;;;3687:59;;3784:11;3761:13;3775:5;3761:20;;;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;3840:5;3810:14;:27;3825:11;3810:27;;;;;;;;;;;;;;;:35;;;;3497:360;3876:13;3911:1;3890:13;:20;;;;:22;3876:37;;;;;;;;;;;;;;;;;;3869:44;;;;;;;;;;;3924:13;:22;;;;;;;;;;;;:::i;:::-;;3984:5;3957:13;:24;3971:9;3957:24;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;4029:4;4000:15;:26;4016:9;4000:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;4094:13;:20;;;;4087:28;;3372:751;;;;;:::o;14342:161:2:-;14400:4;14417:23;;:::i;:::-;14443:9;14453:10;14443:21;;;;;;;;;;;;14417:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14482:7;:13;;;14475:20;;14342:161;;;;:::o;573:113:5:-;631:7;659:1;654;:6;;647:14;;;;;;679:1;675;:5;668:12;;573:113;;;;:::o;192:991:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport \"./Employees.sol\";\r\n\r\n/** @title Customers describes specific functions of a customer of the Bar.\r\nUsers of this smartcontract are by default customers. */\r\ncontract Customers is Employees {\r\n\r\n  event BuyOrderEvent ();\r\n\r\n  /** @dev buy a pint of beer */\r\n  function orderBeer() public payable authorized hasBeerInStock {\r\n      require(msg.value == _getPrice(0));\r\n      Beverage memory _newOrder = beverages[0];\r\n      _newOrder.customer = msg.sender;\r\n      ordersList.push(_newOrder);\r\n      customerPendingOrders[msg.sender]++;\r\n      emit BuyOrderEvent();\r\n  }\r\n\r\n  /** @dev buy a glass of wine */\r\n  function orderWine() public payable authorized hasWineInStock {\r\n      require(msg.value == _getPrice(1));\r\n      ordersList.push(beverages[1]);\r\n      emit BuyOrderEvent();\r\n  }\r\n\r\n  /** @return the number of customers waiting to be served. */\r\n  function getNbPendingOrders(address customer) external view returns(uint) {\r\n      return customerPendingOrders[customer];\r\n  }\r\n\r\n  /* for testing purpose of the internal function*/\r\n  function getPrice(uint _productId) public view returns(uint){\r\n      return _getPrice(_productId);\r\n  }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Jacques\\SOLIDITY-PROJECTS\\finalproject2\\contracts\\Customers.sol",
  "ast": {
    "absolutePath": "/C/Users/Jacques/SOLIDITY-PROJECTS/finalproject2/contracts/Customers.sol",
    "exportedSymbols": {
      "Customers": [
        104
      ]
    },
    "id": 105,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/Users/Jacques/SOLIDITY-PROJECTS/finalproject2/contracts/Employees.sol",
        "file": "./Employees.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 105,
        "sourceUnit": 465,
        "src": "28:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Employees",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 464,
              "src": "214:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Employees_$464",
                "typeString": "contract Employees"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "214:9:0"
          }
        ],
        "contractDependencies": [
          464,
          1583,
          1810
        ],
        "contractKind": "contract",
        "documentation": "@title Customers describes specific functions of a customer of the Bar.\r\nUsers of this smartcontract are by default customers. ",
        "fullyImplemented": true,
        "id": 104,
        "linearizedBaseContracts": [
          104,
          464,
          1810,
          1583
        ],
        "name": "Customers",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 6,
            "name": "BuyOrderEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "251:2:0"
            },
            "src": "231:23:0"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "356:246:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 14,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "373:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "373:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 17,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "396:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16,
                            "name": "_getPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1492,
                            "src": "386:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 18,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "386:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "373:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1923,
                        1924
                      ],
                      "referencedDeclaration": 1923,
                      "src": "365:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "365:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "365:34:0"
                },
                {
                  "assignments": [
                    23
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23,
                      "name": "_newOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 51,
                      "src": "408:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Beverage_$525_memory_ptr",
                        "typeString": "struct Entity.Beverage"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 22,
                        "name": "Beverage",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 525,
                        "src": "408:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beverage_$525_storage_ptr",
                          "typeString": "struct Entity.Beverage"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 24,
                      "name": "beverages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "436:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Beverage_$525_storage_$2_storage",
                        "typeString": "struct Entity.Beverage storage ref[2] storage ref"
                      }
                    },
                    "id": 26,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "446:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "436:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Beverage_$525_storage",
                      "typeString": "struct Entity.Beverage storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "408:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 28,
                        "name": "_newOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "457:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beverage_$525_memory_ptr",
                          "typeString": "struct Entity.Beverage memory"
                        }
                      },
                      "id": 30,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "customer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 516,
                      "src": "457:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1920,
                        "src": "478:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "478:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "457:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "457:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "_newOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "513:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beverage_$525_memory_ptr",
                          "typeString": "struct Entity.Beverage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Beverage_$525_memory_ptr",
                          "typeString": "struct Entity.Beverage memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "ordersList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "497:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Beverage_$525_storage_$dyn_storage",
                          "typeString": "struct Entity.Beverage storage ref[] storage ref"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "497:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Beverage_$525_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Entity.Beverage storage ref) returns (uint256)"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "497:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "497:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "532:35:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "customerPendingOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "532:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 44,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 42,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "554:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "554:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "532:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "532:35:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47,
                      "name": "BuyOrderEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "581:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "581:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "EmitStatement",
                  "src": "576:20:0"
                }
              ]
            },
            "documentation": "@dev buy a pint of beer ",
            "id": 51,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 9,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 589,
                  "src": "330:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "330:10:0"
              },
              {
                "arguments": null,
                "id": 11,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10,
                  "name": "hasBeerInStock",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 599,
                  "src": "341:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "341:14:0"
              }
            ],
            "name": "orderBeer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:0"
            },
            "scope": 104,
            "src": "294:308:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "705:116:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 59,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "722:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "722:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 62,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "745:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 61,
                            "name": "_getPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1492,
                            "src": "735:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "735:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "722:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 58,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1923,
                        1924
                      ],
                      "referencedDeclaration": 1923,
                      "src": "714:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "714:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "714:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "beverages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 570,
                          "src": "773:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Beverage_$525_storage_$2_storage",
                            "typeString": "struct Entity.Beverage storage ref[2] storage ref"
                          }
                        },
                        "id": 72,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "783:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "773:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beverage_$525_storage",
                          "typeString": "struct Entity.Beverage storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Beverage_$525_storage",
                          "typeString": "struct Entity.Beverage storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "ordersList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "757:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Beverage_$525_storage_$dyn_storage",
                          "typeString": "struct Entity.Beverage storage ref[] storage ref"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "757:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Beverage_$525_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Entity.Beverage storage ref) returns (uint256)"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "757:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "757:29:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 75,
                      "name": "BuyOrderEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "800:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "800:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "EmitStatement",
                  "src": "795:20:0"
                }
              ]
            },
            "documentation": "@dev buy a glass of wine ",
            "id": 79,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 54,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 53,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 589,
                  "src": "679:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "679:10:0"
              },
              {
                "arguments": null,
                "id": 56,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 55,
                  "name": "hasWineInStock",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 609,
                  "src": "690:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "690:14:0"
              }
            ],
            "name": "orderWine",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "661:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:0"
            },
            "scope": 104,
            "src": "643:178:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "965:53:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 86,
                      "name": "customerPendingOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "981:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 88,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "customer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1003:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "981:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 85,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "974:38:0"
                }
              ]
            },
            "documentation": "@return the number of customers waiting to be served. ",
            "id": 91,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getNbPendingOrders",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "name": "customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "919:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "918:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "959:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "958:6:0"
            },
            "scope": 104,
            "src": "891:127:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "1137:43:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 99,
                        "name": "_productId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "1163:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98,
                      "name": "_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1492,
                      "src": "1153:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1153:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 97,
                  "id": 101,
                  "nodeType": "Return",
                  "src": "1146:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 103,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "name": "_productId",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1095:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1094:17:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1132:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1131:6:0"
            },
            "scope": 104,
            "src": "1077:103:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 105,
        "src": "192:991:0"
      }
    ],
    "src": "0:1185:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Jacques/SOLIDITY-PROJECTS/finalproject2/contracts/Customers.sol",
    "exportedSymbols": {
      "Customers": [
        104
      ]
    },
    "id": 105,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/Users/Jacques/SOLIDITY-PROJECTS/finalproject2/contracts/Employees.sol",
        "file": "./Employees.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 105,
        "sourceUnit": 465,
        "src": "28:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Employees",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 464,
              "src": "214:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Employees_$464",
                "typeString": "contract Employees"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "214:9:0"
          }
        ],
        "contractDependencies": [
          464,
          1583,
          1810
        ],
        "contractKind": "contract",
        "documentation": "@title Customers describes specific functions of a customer of the Bar.\r\nUsers of this smartcontract are by default customers. ",
        "fullyImplemented": true,
        "id": 104,
        "linearizedBaseContracts": [
          104,
          464,
          1810,
          1583
        ],
        "name": "Customers",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 6,
            "name": "BuyOrderEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "251:2:0"
            },
            "src": "231:23:0"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "356:246:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 14,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "373:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "373:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 17,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "396:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16,
                            "name": "_getPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1492,
                            "src": "386:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 18,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "386:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "373:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1923,
                        1924
                      ],
                      "referencedDeclaration": 1923,
                      "src": "365:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "365:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "365:34:0"
                },
                {
                  "assignments": [
                    23
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23,
                      "name": "_newOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 51,
                      "src": "408:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Beverage_$525_memory_ptr",
                        "typeString": "struct Entity.Beverage"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 22,
                        "name": "Beverage",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 525,
                        "src": "408:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beverage_$525_storage_ptr",
                          "typeString": "struct Entity.Beverage"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 24,
                      "name": "beverages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "436:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Beverage_$525_storage_$2_storage",
                        "typeString": "struct Entity.Beverage storage ref[2] storage ref"
                      }
                    },
                    "id": 26,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "446:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "436:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Beverage_$525_storage",
                      "typeString": "struct Entity.Beverage storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "408:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 28,
                        "name": "_newOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "457:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beverage_$525_memory_ptr",
                          "typeString": "struct Entity.Beverage memory"
                        }
                      },
                      "id": 30,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "customer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 516,
                      "src": "457:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1920,
                        "src": "478:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "478:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "457:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "457:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "_newOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "513:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beverage_$525_memory_ptr",
                          "typeString": "struct Entity.Beverage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Beverage_$525_memory_ptr",
                          "typeString": "struct Entity.Beverage memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "ordersList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "497:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Beverage_$525_storage_$dyn_storage",
                          "typeString": "struct Entity.Beverage storage ref[] storage ref"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "497:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Beverage_$525_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Entity.Beverage storage ref) returns (uint256)"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "497:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "497:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "532:35:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "customerPendingOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "532:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 44,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 42,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "554:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "554:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "532:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "532:35:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47,
                      "name": "BuyOrderEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "581:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "581:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "EmitStatement",
                  "src": "576:20:0"
                }
              ]
            },
            "documentation": "@dev buy a pint of beer ",
            "id": 51,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 9,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 589,
                  "src": "330:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "330:10:0"
              },
              {
                "arguments": null,
                "id": 11,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10,
                  "name": "hasBeerInStock",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 599,
                  "src": "341:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "341:14:0"
              }
            ],
            "name": "orderBeer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:0"
            },
            "scope": 104,
            "src": "294:308:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "705:116:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 59,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "722:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "722:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 62,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "745:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 61,
                            "name": "_getPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1492,
                            "src": "735:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "735:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "722:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 58,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1923,
                        1924
                      ],
                      "referencedDeclaration": 1923,
                      "src": "714:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "714:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "714:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "beverages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 570,
                          "src": "773:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Beverage_$525_storage_$2_storage",
                            "typeString": "struct Entity.Beverage storage ref[2] storage ref"
                          }
                        },
                        "id": 72,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "783:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "773:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beverage_$525_storage",
                          "typeString": "struct Entity.Beverage storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Beverage_$525_storage",
                          "typeString": "struct Entity.Beverage storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "ordersList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "757:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Beverage_$525_storage_$dyn_storage",
                          "typeString": "struct Entity.Beverage storage ref[] storage ref"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "757:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Beverage_$525_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Entity.Beverage storage ref) returns (uint256)"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "757:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "757:29:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 75,
                      "name": "BuyOrderEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "800:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "800:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "EmitStatement",
                  "src": "795:20:0"
                }
              ]
            },
            "documentation": "@dev buy a glass of wine ",
            "id": 79,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 54,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 53,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 589,
                  "src": "679:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "679:10:0"
              },
              {
                "arguments": null,
                "id": 56,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 55,
                  "name": "hasWineInStock",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 609,
                  "src": "690:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "690:14:0"
              }
            ],
            "name": "orderWine",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "661:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:0"
            },
            "scope": 104,
            "src": "643:178:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "965:53:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 86,
                      "name": "customerPendingOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "981:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 88,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "customer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1003:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "981:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 85,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "974:38:0"
                }
              ]
            },
            "documentation": "@return the number of customers waiting to be served. ",
            "id": 91,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getNbPendingOrders",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "name": "customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "919:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "918:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "959:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "958:6:0"
            },
            "scope": 104,
            "src": "891:127:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "1137:43:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 99,
                        "name": "_productId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "1163:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98,
                      "name": "_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1492,
                      "src": "1153:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1153:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 97,
                  "id": 101,
                  "nodeType": "Return",
                  "src": "1146:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 103,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "name": "_productId",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1095:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1094:17:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1132:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1131:6:0"
            },
            "scope": 104,
            "src": "1077:103:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 105,
        "src": "192:991:0"
      }
    ],
    "src": "0:1185:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x2c2b9c9a4a25e24b174f26114e8926a9f2128fe4",
      "transactionHash": "0xa07734cff5a2acb41bc206c48d3ac05074282f63e1a3a5e8b2eb10574151c47a"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-08-27T00:13:51.226Z"
}